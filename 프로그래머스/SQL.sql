--모든 레코드 조회하기
SELECT * from ANIMAL_INS
--역순 정렬하기
SELECT NAME, DATETIME from ANIMAL_INS
order by ANIMAL_ID desc;
--아픈 동물 찾기
SELECT ANIMAL_ID,NAME from ANIMAL_INS
where INTAKE_CONDITION='Sick';
--어린 동물 찾기
SELECT ANIMAL_ID,NAME from ANIMAL_INS
where INTAKE_CONDITION <> 'Aged';
--동물의 아이디와 이름
SELECT ANIMAL_ID,NAME from ANIMAL_INS
order by ANIMAL_ID ; 
--여러 기준으로 정렬하기
SELECT ANIMAL_ID,NAME,DATETIME from ANIMAL_INS
order by NAME asc, DATETIME desc;
--상위 n개 레코드
SELECT name from ANIMAL_INS 
order by DATETIME
limit 1;
--최댓값 구하기
SELECT DATETIME from ANIMAL_INS
order by DATETIME desc
limit 1;
--최솟값 구하기
SELECT DATETIME from ANIMAL_INS
order by DATETIME 
limit 1;
--동물 수 구하기
SELECT count(*) from ANIMAL_INS
--중복 제거하기
select  count(distinct name) from ANIMAL_INS
where name is not null
--고양이와 개는 몇 마리 있을까
SELECT ANIMAL_TYPE, count(ANIMAL_TYPE) as "count"  from ANIMAL_INS 
group by ANIMAL_TYPE 
order by ANIMAL_TYPE ;
--동명 동물 수 찾기
SELECT NAME, COUNT(NAME)
FROM ANIMAL_INS
WHERE NAME is NOT NULL
GROUP BY NAME
HAVING COUNT(NAME) >= 2
order by name;
--입양 시각 구하기(1)
SELECT HOUR(DATETIME) HOUR, COUNT(DATETIME) COUNT
FROM ANIMAL_OUTS
GROUP BY HOUR(DATETIME)
HAVING HOUR >= 9 and HOUR <= 19
order by HOUR
--입양 시각 구하기(2)
SET @hour := -1; -- 변수 선언
SELECT (@hour := @hour + 1) as HOUR,
(SELECT COUNT(*) FROM ANIMAL_OUTS WHERE HOUR(DATETIME) = @hour) as COUNT
FROM ANIMAL_OUTS
WHERE @hour < 23 

--이름이 없는 동물의 아이디
SELECT ANIMAL_ID  from ANIMAL_INS 
where NAME is null
--이름이 있는 동물의 아이디
SELECT ANIMAL_ID  from ANIMAL_INS 
where NAME is not null
order by ANIMAL_ID
--NULL 처리하기
SELECT ANIMAL_TYPE, IFNULL(NAME, "No name") AS 'NAME', SEX_UPON_INTAKE 
FROM ANIMAL_INS

--없어진 기록 찾기
SELECT OUTS.ANIMAL_ID, OUTS.NAME
FROM ANIMAL_OUTS OUTS
LEFT OUTER JOIN ANIMAL_INS INS
ON OUTS.ANIMAL_ID = INS.ANIMAL_ID
WHERE INS.ANIMAL_ID is NULL
ORDER BY OUTS.ANIMAL_ID
--있었는데요 없었습니다
SELECT ANIMAL_INS.ANIMAL_ID, ANIMAL_INS.NAME
FROM ANIMAL_INS
LEFT JOIN ANIMAL_OUTS
ON ANIMAL_INS.ANIMAL_ID = ANIMAL_OUTS.ANIMAL_ID
WHERE ANIMAL_INS.DATETIME > ANIMAL_OUTS.DATETIME
ORDER BY ANIMAL_INS.DATETIME
--오랜 기간 보호한 동물(1)
SELECT ANIMAL_INS.NAME, ANIMAL_INS.DATETIME
FROM ANIMAL_INS 
LEFT JOIN ANIMAL_OUTS
ON ANIMAL_INS.ANIMAL_ID =  ANIMAL_OUTS.ANIMAL_ID
WHERE  ANIMAL_OUTS.ANIMAL_ID IS NULL
ORDER BY ANIMAL_INS.DATETIME ASC
LIMIT 3
 
--보호소에서 중성화한 동물
SELECT A.ANIMAL_ID, A.ANIMAL_TYPE, A.NAME
FROM ANIMAL_INS AS A
LEFT JOIN ANIMAL_OUTS AS B
ON A.ANIMAL_ID = B.ANIMAL_ID
WHERE A.SEX_UPON_INTAKE LIKE 'Intact %'and (B.SEX_UPON_OUTCOME LIKE '%Spayed%' or
B.SEX_UPON_OUTCOME LIKE '%Neutered%')
ORDER BY A.ANIMAL_ID
--루시와 엘라 찾기
SELECT ANIMAL_ID,	NAME,	SEX_UPON_INTAKE from ANIMAL_INS 
where name in ('Lucy', 'Ella', 'Pickle', 'Rogan', 'Sabrina', 'Mitty')
--이름에 el이 들어가는 동물 찾기
SELECT ANIMAL_ID, NAME 
FROM ANIMAL_INS 
WHERE ANIMAL_TYPE = "Dog" AND NAME LIKE "%EL%" 
ORDER BY NAME ASC
--중성화 여부 파악하기
SELECT ANIMAL_ID, NAME, 
CASE 
    WHEN SEX_UPON_INTAKE LIKE "%NE%" 
    OR SEX_UPON_INTAKE 
        LIKE "SP%" THEN 'O' ELSE 'X' END AS "중성화" 
FROM ANIMAL_INS
--오랜 기간 보호한 동물(2)
SELECT A.ANIMAL_ID, A.NAME 
FROM ANIMAL_INS AS A, ANIMAL_OUTS AS B 
WHERE A.ANIMAL_ID = B.ANIMAL_ID 
ORDER BY B.DATETIME - A.DATETIME 
DESC LIMIT 2
--DATETIME에서 DATE로 형 변환
SELECT ANIMAL_ID, NAME, DATE_FORMAT(DATETIME, '%Y-%m-%d') AS "날짜" 
FROM ANIMAL_INS
ORDER BY ANIMAL_ID